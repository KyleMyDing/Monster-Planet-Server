// Code generated by protoc-gen-go.
// source: server.proto
// DO NOT EDIT!

package GxProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ServerConnectGateReq struct {
	Id               *uint32  `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Cmds             []uint32 `protobuf:"varint,2,rep,name=cmds" json:"cmds,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ServerConnectGateReq) Reset()         { *m = ServerConnectGateReq{} }
func (m *ServerConnectGateReq) String() string { return proto.CompactTextString(m) }
func (*ServerConnectGateReq) ProtoMessage()    {}

func (m *ServerConnectGateReq) GetId() uint32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *ServerConnectGateReq) GetCmds() []uint32 {
	if m != nil {
		return m.Cmds
	}
	return nil
}

type ClientLogoutNotify struct {
	PlayerName       *string `protobuf:"bytes,1,opt,name=playerName" json:"playerName,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ClientLogoutNotify) Reset()         { *m = ClientLogoutNotify{} }
func (m *ClientLogoutNotify) String() string { return proto.CompactTextString(m) }
func (*ClientLogoutNotify) ProtoMessage()    {}

func (m *ClientLogoutNotify) GetPlayerName() string {
	if m != nil && m.PlayerName != nil {
		return *m.PlayerName
	}
	return ""
}

type AdminReq struct {
	Serverids        []int32  `protobuf:"varint,1,rep,name=serverids" json:"serverids,omitempty"`
	Cmd              *string  `protobuf:"bytes,2,opt,name=cmd" json:"cmd,omitempty"`
	Parameter        []string `protobuf:"bytes,3,rep,name=parameter" json:"parameter,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AdminReq) Reset()         { *m = AdminReq{} }
func (m *AdminReq) String() string { return proto.CompactTextString(m) }
func (*AdminReq) ProtoMessage()    {}

func (m *AdminReq) GetServerids() []int32 {
	if m != nil {
		return m.Serverids
	}
	return nil
}

func (m *AdminReq) GetCmd() string {
	if m != nil && m.Cmd != nil {
		return *m.Cmd
	}
	return ""
}

func (m *AdminReq) GetParameter() []string {
	if m != nil {
		return m.Parameter
	}
	return nil
}

type AdminRsp struct {
	Info             *string             `protobuf:"bytes,1,opt,name=info" json:"info,omitempty"`
	Role             *RoleCommonInfo     `protobuf:"bytes,2,opt,name=role" json:"role,omitempty"`
	Bag              *PbBagInfo          `protobuf:"bytes,3,opt,name=bag" json:"bag,omitempty"`
	CardBag          *PbCardBagInfo      `protobuf:"bytes,4,opt,name=cardBag" json:"cardBag,omitempty"`
	FightCardBag     *PbFightCardBagInfo `protobuf:"bytes,5,opt,name=fightCardBag" json:"fightCardBag,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *AdminRsp) Reset()         { *m = AdminRsp{} }
func (m *AdminRsp) String() string { return proto.CompactTextString(m) }
func (*AdminRsp) ProtoMessage()    {}

func (m *AdminRsp) GetInfo() string {
	if m != nil && m.Info != nil {
		return *m.Info
	}
	return ""
}

func (m *AdminRsp) GetRole() *RoleCommonInfo {
	if m != nil {
		return m.Role
	}
	return nil
}

func (m *AdminRsp) GetBag() *PbBagInfo {
	if m != nil {
		return m.Bag
	}
	return nil
}

func (m *AdminRsp) GetCardBag() *PbCardBagInfo {
	if m != nil {
		return m.CardBag
	}
	return nil
}

func (m *AdminRsp) GetFightCardBag() *PbFightCardBagInfo {
	if m != nil {
		return m.FightCardBag
	}
	return nil
}
